<?php


namespace Tests\Unit\Controller;

use App\Http\Controllers\Api\v1\OperationLogController;
use App\Http\Requests\OperationLogRequest as Request;
use Hiero7\Services\OperationLogService;
use Tests\TestCase;

class OperationLogTest extends TestCase
{

    protected $operationLogService;
    protected $operationLog;

    protected function setUp()
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->operationLog = $this->initMock(OperationLogService::class);
        app()->call([$this, 'service']);
        $this->controller = new OperationLogController($this->operationLogService);
    }

    public function tearDown()
    {
        $this->alarmService = null;
        parent::tearDown();
    }

    public function service(OperationLogService $operationLogService)
    {
        $this->operationLogService = $operationLogService;
    }

    /** @test */
    public function getOperationLog()
    {
        $loginUid = 1;
        $user_group_id = 1;
        $target_user_group_id = 1;
        $request = new Request;

        $request->merge([
            'uid' =>$loginUid,
            'user_group_id' => $target_user_group_id,
        ]);

        $this->addUuidforPayload()
            ->addUserGroupId($user_group_id)
            ->setJwtTokenPayload($loginUid, $this->jwtPayload);

        $this->operationLog->shouldReceive('get')
            ->withAnyArgs()
            ->andReturn([
                "message" => "Success",
                "errorCode"=>null,
                "data"=>[
                    [
                        "category"=> "User",
                        "uid" => 1,
                        "user_group" => 1,
                        "message" => "RD-S Brian (brian@123.com) login .",
                        "time" => "2019-07-02 15:38:50"
                    ]
                ]
            ]);
    }
}
